services:
  postgres:
    image: postgres:14
    container_name: marketing_postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-superset}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-superset}
      POSTGRES_DB: ${POSTGRES_DB:-superset}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "superset"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: marketing_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  superset:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: marketing_superset
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    volumes:
      - ./superset_config.py:/app/superset/superset_config.py
      - superset_home:/app/superset_home
      - ./assets:/app/superset/assets
    environment:
      SUPERSET_DB_URI: ${SUPERSET_DB_URI:-postgresql+psycopg2://superset:superset@postgres:5432/superset}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      SECRET_KEY: ${SECRET_KEY:-thisISaSECRET_1234}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      PYTHONPATH: /app/superset
      SUPERSET_CONFIG_PATH: /app/superset/superset_config.py
      FLASK_APP: superset
      FLASK_ENV: production
    ports:
      - "8088:8088"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      bash -c "
        superset db upgrade &&
        superset init &&
        superset run -p 8088 --with-threads --reload --debugger"

  # Optional: Add pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    container_name: marketing_pgadmin
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@superset.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  superset_home:
  pgadmin_data: 